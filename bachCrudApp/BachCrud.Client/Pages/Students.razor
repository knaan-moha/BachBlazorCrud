@page "/"
@using BlazorCrud.Client.Services
@using BlazorCrud.Shared
@using BachCrud.Shared
@inject IStudentService StudentService;

@if (_listStudnts == null)
{
    <div class="text-center ">
       <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
         <span class="sr-only"></span>
       </div>
        
        <div style="margin-top: 10px;">Loading...</div>
    </div>
}
else                   
{

<div class="container mt-5">
   
        <a id="Add" class="btn btn-success btn-sm mb-3" href="student">New Student</a>
        <table class="table">
            <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Age</th>
                <th>Course</th>
                <th>Registration Date</th>
                <th>Actions</th>
            </tr>                    
            </thead>
            <tbody>

            @foreach (var item in _listStudnts)
            {

                <tr>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Age</td>
                    <td>@item.CourseDto!.Name</td>
                    <td>@item.RegistrationDate.ToString("dd.MM.yyyy")</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="student/@item.Id">
                            <i class="bi bi-pencil-fill"></i>
                           
                        </a>
                         <button type="button" class="btn btn-danger btn-sm ms-2 ml-2" @onclick="(() => DeleteStudent(item.Id))">
                             <i class="bi bi-trash"></i>
                             </button>
                    </td>


                </tr>


            }
            
            </tbody>



        </table>

    </div>
}



@code {


    List<StudentDTO> _listStudnts;

    protected override async Task OnInitializedAsync()
    {
        _listStudnts = await StudentService.AllStudents();
    }

    public async Task DeleteStudent(int id)
    {
        var result = await StudentService.Delete(id);

        if (result)
        {
            _listStudnts = await StudentService.AllStudents();
        }

    }

}
